services:
    sonata.admin.verbatim:
        class: App\Admin\VerbatimAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Autres", label: "Verbatims" }
        arguments:
            - ~
            - App\Entity\Attributes\Verbatim
            - ~

    sonata.admin.partenaire:
        class: App\Admin\PartenaireAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Autres", label: "Partenaires" }
        arguments:
            - ~
            - App\Entity\Attributes\Partenaire
            - ~

    sonata.admin.faq:
        class: App\Admin\FaqQuestionAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Autres", label: "FAQ" }
        arguments:
            - ~
            - App\Entity\FaqQuestion
            - ~

    re_admin.admin.annexe:
        class: App\Admin\AnnexeAdmin
        arguments: [ ~, App\Entity\Attributes\Annexe, ~ ]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Annexe }

    re_admin.admin.region:
        class: App\Admin\RegionAdmin
        arguments: [ ~, App\Entity\Attribute\Region, ~ ]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Régions }

    sonata.admin.user_simple:
        class: App\Admin\UserSimpleAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Utilisateurs et Centres", label: "Utilisateurs simples", show_in_dashboard: false }
        arguments:
            - ~
            - App\Entity\Attributes\User
            - ~
            - '@Symfony\Bundle\SecurityBundle\Security'
            - '@Symfony\Component\Routing\RouterInterface'
            - '@App\Checker\FeatureFlagChecker'
        calls:
            - [ setEntityManager, [ '@Doctrine\ORM\EntityManagerInterface' ] ]

    sonata.admin.beneficiaire:
        class: App\Admin\BeneficiaireAdmin
        arguments:
            - ~
            - App\Entity\Attributes\Beneficiaire
            - ~
            - '@Symfony\Component\Routing\RouterInterface'
            - '@Symfony\Component\Security\Core\Authorization\AuthorizationCheckerInterface'
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Utilisateurs et Centres", label: "Beneficiaires" }
        calls:
            - [ setUserManager, [ '@App\ManagerV2\UserManager' ] ]

    sonata.admin.beneficiairecentre:
        class: App\Admin\BeneficiaireCentreAdmin
        arguments: [ ~, App\Entity\Attributes\BeneficiaireCentre, ~ ]
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Utilisateurs et Centres", label: "BeneficiaireCentre", show_in_dashboard: false }

    sonata.admin.membrecentre:
        class: App\Admin\MembreCentreAdmin
        arguments: [ ~, App\Entity\Attributes\MembreCentre, ~ ]
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Utilisateurs et Centres", label: "MembreCentre", show_in_dashboard: false }

    sonata.admin.membre:
        class: App\Admin\MembreAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Utilisateurs et Centres", label: "Professionnels" }
        arguments:
            - ~
            - App\Entity\Attributes\Membre
            - App\Admin\MembreAdminController
        calls:
            - [ setEntityManager, [ '@Doctrine\ORM\EntityManagerInterface' ] ]
            - [ setUserManager, [ '@App\ManagerV2\UserManager' ] ]

    sonata.admin.association:
        class: App\Admin\AssociationAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Utilisateurs et Centres", label: "Associations" }
        arguments:
            - ~
            - App\Entity\Attributes\Association
            - ~
        calls:
            - [ setEntityManager, [ '@Doctrine\ORM\EntityManagerInterface' ] ]
            - [ setUserManager, [ '@App\ManagerV2\UserManager' ] ]

    sonata.admin.centre:
        class: App\Admin\CentreAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Utilisateurs et Centres", label: "Centres" }
        arguments:
            - ~
            - App\Entity\Attributes\Centre
            - ~
        calls:
            - [ setEntityManager, [ '@Doctrine\ORM\EntityManagerInterface' ] ]
            - [ setUserManager, [ '@App\ManagerV2\UserManager' ] ]

    sonata.admin.type_centre:
        class: App\Admin\TypeCentreAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Types et Catégories", label: "Types de centres" }
        arguments:
            - ~
            - App\Entity\Attributes\TypeCentre
            - ~

    sonata.admin.sms:
        class: App\Admin\SMSAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Autres", label: "SMS de rappel envoyés" }
        arguments:
            - ~
            - App\Entity\Attributes\SMS
            - ~

    sonata.admin.note:
        class: App\Admin\NoteAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Données personnelles", label: "Notes" }
        arguments:
            - ~
            - App\Entity\Attributes\Note
            - ~

    sonata.admin.document:
        class: App\Admin\DocumentAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Données personnelles", label: "Documents" }
        arguments:
            - ~
            - App\Entity\Attributes\Document
            - ~

    sonata.admin.dossier:
        class: App\Admin\DossierAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Données personnelles", label: "Dossiers" }
        arguments:
            - ~
            - App\Entity\Attributes\Dossier
            - ~

    sonata.admin.evenement:
        class: App\Admin\EvenementAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Données personnelles", label: "Evenements" }
        arguments:
            - ~
            - App\Entity\Attributes\Evenement
            - ~

    sonata.admin.contact:
        class: App\Admin\ContactAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Données personnelles", label: "Contacts" }
        arguments:
            - ~
            - App\Entity\Attributes\Contact
            - ~

    sonata.admin.adresse:
        class: App\Admin\AdresseAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Autres", label: "Adresse", show_in_dashboard: false }
        arguments:
            - ~
            - App\Entity\Attributes\Adresse
            - ~

    sonata.admin.creator:
        class: App\Admin\CreatorAdmin
        arguments:
            - ~
            - App\Entity\Creator
            - ~
        calls:
            - [ setSubClasses, [ [ App\Entity\CreatorClient, App\Entity\CreatorCentre, App\Entity\CreatorUser ] ] ]
        tags:
            - { name: sonata.admin, manager_type: orm, group: "admin", label: "Creator" }

    sonata.admin.admin:
        class: App\Admin\AdminUserAdmin
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Outils SuperAdmin", label: "Admins" }
        arguments:
            - ~
            - App\Entity\Attributes\User
            - ~
        calls:
            - [ setUserManager, [ '@App\ManagerV2\UserManager' ] ]
            - [ setResettingService, [ '@App\ServiceV2\ResettingService' ] ]
    # OAuth
    reo_auth.admin.client:
        class: App\Admin\ClientAdmin
        arguments: [ ~, App\Entity\Attributes\Client, ~ ]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Client }
        calls:
            - [ setEntityManager, [ '@Doctrine\ORM\EntityManagerInterface' ] ]

    reo_auth.admin.client_user:
        class: App\Admin\ClientEntityAdmin
        arguments: [ ~, App\Entity\ClientUser, ~ ]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Client }

    reo_auth.admin.client_membre:
        class: App\Admin\ClientEntityAdmin
        arguments: [ ~, App\Entity\Attributes\ClientMembre, ~ ]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Client }

    reo_auth.admin.client_beneficiaire:
        class: App\Admin\ClientEntityAdmin
        arguments: [ ~, App\Entity\Attributes\ClientBeneficiaire, ~ ]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Client }

    reo_auth.admin.client_centre:
        class: App\Admin\ClientEntityAdmin
        arguments: [ ~, App\Entity\Attributes\ClientCentre, ~ ]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Client }

    reo_auth.admin.client_gestionnaire:
        class: App\Admin\ClientEntityAdmin
        arguments: [ ~, App\Entity\Attributes\ClientGestionnaire, ~ ]
        tags:
            - { name: sonata.admin, manager_type: orm, group: admin, label: Client }
    sonata.admin.feature_toggle:
        class: App\Admin\FeatureToggle
        arguments: [ ~, App\Entity\Attributes\FeatureFlag, ~ ]
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Outils SuperAdmin", label: "Feature Toggle" }
    sonata.admin.folder_icon:
        class: App\Admin\FolderIconAdmin
        arguments: [ ~, App\Entity\Attributes\FolderIcon, ~ ]
        tags:
            - { name: sonata.admin, manager_type: orm, group: "Outils SuperAdmin", label: "Image de dossier" }
