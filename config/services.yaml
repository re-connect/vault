# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:
    container.dumper.inline_factories: true

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        bind:
            $adminMails: '%env(json:ADMIN_MAILS)%'
            $apikey: '%env(MJ_APIKEY_PUBLIC)%'
            $apisecret: '%env(MJ_APIKEY_PRIVATE)%'
            $bucketAccess: '%env(BUCKET_ACCESS_KEY)%'
            $bucketEndpoint: '%env(BUCKET_ENDPOINT)%'
            $bucketName: '%env(BUCKET_NAME)%'
            $bucketSecret: '%env(BUCKET_SECRET_KEY)%'
            $env: '%env(APP_ENV)%'
            $kernelEnvironment: '%kernel.environment%'
            $kernelProjectDir: '%kernel.project_dir%'
            $noReplyMail: 'noreply@reconnect.fr'
            $contactMail: 'contact@reconnect.fr'
            string $rosalieBaseUrl: '%env(ROSALIE_BASE_URL)%'
            string $rosalieBasicToken: '%env(ROSALIE_BASIC_TOKEN)%'
            string $iOSAppLink: '%env(IOS_APP_LINK)%'
            string $androidAppLink: '%env(ANDROID_APP_LINK)%'

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'
            - '../src/Tests/'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones
    'Symfony\Component\Serializer\NameConverter\CamelCaseToSnakeCaseNameConverter': ~

    # Twig Extension
    App\Extension\DocumentExtension:
        autowire: true
        tags:
            - { name: twig.extension }

    App\Extension\CommonExtension:
        autowire: true
        tags:
            - { name: twig.extension }

    #Twig Extension V2
    App\Twig\ExtensionV2\UserColorExtension:
        autowire: true
        tags:
            - { name: twig.extension }

    # Listener
    App\Listener\UserListener:
        autowire: true
        tags:
            - { name: doctrine.event_listener, event: prePersist, method: prePersist }

    App\Listener\DonneePersonnelleListener:
        autowire: true
        tags:
            - { name: doctrine.event_listener, event: preUpdate }

    App\Listener\REImageListener:
        autowire: true
        tags:
            - { name: doctrine.event_listener, event: prePersist, method: prePersist }
            - { name: doctrine.event_listener, event: preUpdate, method: preUpdate }
            - { name: doctrine.event_listener, event: preRemove, method: preRemove }

    App\Listener\FaqQuestionListener:
        autowire: true
        tags:
            - { name: doctrine.event_listener, event: prePersist, method: prePersist }
            - { name: doctrine.event_listener, event: preUpdate, method: preUpdate }
            - { name: doctrine.event_listener, event: postFlush, method: postFlush }

    re.manager.sms:
        class: App\Manager\SMSManager
        autowire: true
        tags:
            - { name: 'kernel.event_listener', event: 're.event.evenement', method: onEvenementEvent }

    # Voter
    App\Security\Authorization\Voter\UserVoter:
        autowire: true
        public: false
        calls:
            - [ setBeneficiaireVoter, [ '@App\Security\Authorization\Voter\BeneficiaireVoter' ] ]
            - [ setMembreVoter, [ '@App\Security\Authorization\Voter\MembreVoter' ] ]
        tags:
            - { name: security.voter }

    Imagine\Gd\Imagine: '@liip_imagine.gd'

    App\DataFixtures\FixturesPurgerFactory:
        tags:
            - { name: 'doctrine.fixtures.purger_factory', alias: 'fixtures_purger' }

    App\Api\State\BeneficiaryStateProvider:
        bind:
            $itemProvider: '@api_platform.doctrine.orm.state.item_provider'
    App\Api\State\BeneficiaryStateProcessor:
        bind:
            $persistProcessor: '@api_platform.doctrine.orm.state.persist_processor'
